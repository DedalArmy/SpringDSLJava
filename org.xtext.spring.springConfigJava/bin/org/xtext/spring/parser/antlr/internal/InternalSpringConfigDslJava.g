/*
 * generated by Xtext 2.15.0
 */
grammar InternalSpringConfigDslJava;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.spring.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.spring.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.spring.services.SpringConfigDslJavaGrammarAccess;

}

@parser::members {

 	private SpringConfigDslJavaGrammarAccess grammarAccess;

    public InternalSpringConfigDslJavaParser(TokenStream input, SpringConfigDslJavaGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "SpringProject";
   	}

   	@Override
   	protected SpringConfigDslJavaGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleSpringProject
entryRuleSpringProject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpringProjectRule()); }
	iv_ruleSpringProject=ruleSpringProject
	{ $current=$iv_ruleSpringProject.current; }
	EOF;

// Rule SpringProject
ruleSpringProject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSpringProjectAccess().getSpringProjectAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSpringProjectAccess().getConfigurationsConfigurationParserRuleCall_1_0());
				}
				lv_configurations_1_0=ruleConfiguration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpringProjectRule());
					}
					add(
						$current,
						"configurations",
						lv_configurations_1_0,
						"org.xtext.spring.SpringConfigDslJava.Configuration");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConfiguration
entryRuleConfiguration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigurationRule()); }
	iv_ruleConfiguration=ruleConfiguration
	{ $current=$iv_ruleConfiguration.current; }
	EOF;

// Rule Configuration
ruleConfiguration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConfigurationAccess().getConfigurationAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigurationAccess().getAnnotationConfigurationAnnotationConfigurationParserRuleCall_1_0());
				}
				lv_annotationConfiguration_1_0=ruleAnnotationConfiguration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigurationRule());
					}
					add(
						$current,
						"annotationConfiguration",
						lv_annotationConfiguration_1_0,
						"org.xtext.spring.SpringConfigDslJava.AnnotationConfiguration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigurationAccess().getClassVisibilityVisibilityEnumRuleCall_2_0());
				}
				lv_classVisibility_2_0=ruleVisibility
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigurationRule());
					}
					set(
						$current,
						"classVisibility",
						lv_classVisibility_2_0,
						"org.xtext.spring.SpringConfigDslJava.Visibility");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3='class'
		{
			newLeafNode(otherlv_3, grammarAccess.getConfigurationAccess().getClassKeyword_3());
		}
		this_ID_4=RULE_ID
		{
			newLeafNode(this_ID_4, grammarAccess.getConfigurationAccess().getIDTerminalRuleCall_4());
		}
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getConfigurationAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigurationAccess().getComponentsComponentParserRuleCall_6_0());
				}
				lv_components_6_0=ruleComponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigurationRule());
					}
					add(
						$current,
						"components",
						lv_components_6_0,
						"org.xtext.spring.SpringConfigDslJava.Component");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getConfigurationAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleComponent
entryRuleComponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentRule()); }
	iv_ruleComponent=ruleComponent
	{ $current=$iv_ruleComponent.current; }
	EOF;

// Rule Component
ruleComponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getComponentAccess().getComponentAction_0(),
					$current);
			}
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getComponentAccess().getUnorderedGroup_1());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getComponentAccess().getUnorderedGroup_1(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getComponentAccess().getUnorderedGroup_1(), 0);
					}
								({true}?=>(otherlv_2='@Bean'
								{
									newLeafNode(otherlv_2, grammarAccess.getComponentAccess().getBeanKeyword_1_0());
								}
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getComponentAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getComponentAccess().getUnorderedGroup_1(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getComponentAccess().getUnorderedGroup_1(), 1);
					}
								({true}?=>(otherlv_3='('
								{
									newLeafNode(otherlv_3, grammarAccess.getComponentAccess().getLeftParenthesisKeyword_1_1_0());
								}
								(
									(
										(
											lv_names_4_1=RULE_STRING
											{
												newLeafNode(lv_names_4_1, grammarAccess.getComponentAccess().getNamesSTRINGTerminalRuleCall_1_1_1_0_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getComponentRule());
												}
												addWithLastConsumed(
													$current,
													"names",
													lv_names_4_1,
													"org.xtext.spring.SpringConfigDslJava.STRING");
											}
											    |
											{
												newCompositeNode(grammarAccess.getComponentAccess().getNamesStringListAnnotationParserRuleCall_1_1_1_0_1());
											}
											lv_names_4_2=ruleStringListAnnotation
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getComponentRule());
												}
												add(
													$current,
													"names",
													lv_names_4_2,
													"org.xtext.spring.SpringConfigDslJava.StringListAnnotation");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)
								otherlv_5=')'
								{
									newLeafNode(otherlv_5, grammarAccess.getComponentAccess().getRightParenthesisKeyword_1_1_2());
								}
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getComponentAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getComponentAccess().getUnorderedGroup_1(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getComponentAccess().getUnorderedGroup_1(), 2);
					}
								({true}?=>(otherlv_6='('
								{
									newLeafNode(otherlv_6, grammarAccess.getComponentAccess().getLeftParenthesisKeyword_1_2_0());
								}
								(
									(
										lv_name_7_0=RULE_STRING
										{
											newLeafNode(lv_name_7_0, grammarAccess.getComponentAccess().getNameSTRINGTerminalRuleCall_1_2_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getComponentRule());
											}
											setWithLastConsumed(
												$current,
												"name",
												lv_name_7_0,
												"org.xtext.spring.SpringConfigDslJava.STRING");
										}
									)
								)
								otherlv_8=')'
								{
									newLeafNode(otherlv_8, grammarAccess.getComponentAccess().getRightParenthesisKeyword_1_2_2());
								}
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getComponentAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getComponentAccess().getUnorderedGroup_1(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getComponentAccess().getUnorderedGroup_1(), 3);
					}
								({true}?=>(otherlv_9='@DependsOn'
								{
									newLeafNode(otherlv_9, grammarAccess.getComponentAccess().getDependsOnKeyword_1_3_0());
								}
								otherlv_10='('
								{
									newLeafNode(otherlv_10, grammarAccess.getComponentAccess().getLeftParenthesisKeyword_1_3_1());
								}
								(
									(
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getComponentRule());
											}
										}
										otherlv_11=RULE_STRING
										{
											newLeafNode(otherlv_11, grammarAccess.getComponentAccess().getDependsOnComponentCrossReference_1_3_2_0());
										}
									)
								)
								otherlv_12=')'
								{
									newLeafNode(otherlv_12, grammarAccess.getComponentAccess().getRightParenthesisKeyword_1_3_3());
								}
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getComponentAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getComponentAccess().getUnorderedGroup_1(), 4)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getComponentAccess().getUnorderedGroup_1(), 4);
					}
								({true}?=>((
									otherlv_13='@Qualifier'
									{
										newLeafNode(otherlv_13, grammarAccess.getComponentAccess().getQualifierKeyword_1_4_0_0());
									}
									otherlv_14='('
									{
										newLeafNode(otherlv_14, grammarAccess.getComponentAccess().getLeftParenthesisKeyword_1_4_0_1());
									}
									(
										(
											lv_qualifier_15_0=RULE_STRING
											{
												newLeafNode(lv_qualifier_15_0, grammarAccess.getComponentAccess().getQualifierSTRINGTerminalRuleCall_1_4_0_2_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getComponentRule());
												}
												addWithLastConsumed(
													$current,
													"qualifier",
													lv_qualifier_15_0,
													"org.xtext.spring.SpringConfigDslJava.STRING");
											}
										)
									)
									otherlv_16=')'
									{
										newLeafNode(otherlv_16, grammarAccess.getComponentAccess().getRightParenthesisKeyword_1_4_0_3());
									}
								)?
								(
									(
										{
											newCompositeNode(grammarAccess.getComponentAccess().getConstructorVisibilityVisibilityEnumRuleCall_1_4_1_0());
										}
										lv_constructorVisibility_17_0=ruleVisibility
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getComponentRule());
											}
											set(
												$current,
												"constructorVisibility",
												lv_constructorVisibility_17_0,
												"org.xtext.spring.SpringConfigDslJava.Visibility");
											afterParserOrEnumRuleCall();
										}
									)
								)?
								(
									(
										{
											newCompositeNode(grammarAccess.getComponentAccess().getClassCreationMethodParserRuleCall_1_4_2_0());
										}
										lv_class_18_0=ruleCreationMethod
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getComponentRule());
											}
											set(
												$current,
												"class",
												lv_class_18_0,
												"org.xtext.spring.SpringConfigDslJava.CreationMethod");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									(
										lv_name_19_0=RULE_ID
										{
											newLeafNode(lv_name_19_0, grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_1_4_3_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getComponentRule());
											}
											setWithLastConsumed(
												$current,
												"name",
												lv_name_19_0,
												"org.xtext.spring.SpringConfigDslJava.ID");
										}
									)
								)
								otherlv_20='('
								{
									newLeafNode(otherlv_20, grammarAccess.getComponentAccess().getLeftParenthesisKeyword_1_4_4());
								}
								otherlv_21=')'
								{
									newLeafNode(otherlv_21, grammarAccess.getComponentAccess().getRightParenthesisKeyword_1_4_5());
								}
								otherlv_22='{'
								{
									newLeafNode(otherlv_22, grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_1_4_6());
								}
								otherlv_23='return'
								{
									newLeafNode(otherlv_23, grammarAccess.getComponentAccess().getReturnKeyword_1_4_7());
								}
								otherlv_24='new'
								{
									newLeafNode(otherlv_24, grammarAccess.getComponentAccess().getNewKeyword_1_4_8());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getComponentAccess().getClassCreationMethodParserRuleCall_1_4_9_0());
										}
										lv_class_25_0=ruleCreationMethod
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getComponentRule());
											}
											set(
												$current,
												"class",
												lv_class_25_0,
												"org.xtext.spring.SpringConfigDslJava.CreationMethod");
											afterParserOrEnumRuleCall();
										}
									)
								)
								otherlv_26='('
								{
									newLeafNode(otherlv_26, grammarAccess.getComponentAccess().getLeftParenthesisKeyword_1_4_10());
								}
								otherlv_27=')'
								{
									newLeafNode(otherlv_27, grammarAccess.getComponentAccess().getRightParenthesisKeyword_1_4_11());
								}
								{
									newCompositeNode(grammarAccess.getComponentAccess().getEOLParserRuleCall_1_4_12());
								}
								ruleEOL
								{
									afterParserOrEnumRuleCall();
								}
								otherlv_29='}'
								{
									newLeafNode(otherlv_29, grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_1_4_13());
								}
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getComponentAccess().getUnorderedGroup_1());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getComponentAccess().getUnorderedGroup_1())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getComponentAccess().getUnorderedGroup_1());
				}
		)
	)
;

// Entry rule entryRuleCreationMethod
entryRuleCreationMethod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreationMethodRule()); }
	iv_ruleCreationMethod=ruleCreationMethod
	{ $current=$iv_ruleCreationMethod.current; }
	EOF;

// Rule CreationMethod
ruleCreationMethod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getCreationMethodAccess().getClassClassParserRuleCall_0());
			}
			lv_class_0_0=ruleClass
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getCreationMethodRule());
				}
				set(
					$current,
					"class",
					lv_class_0_0,
					"org.xtext.spring.SpringConfigDslJava.Class");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleClass
entryRuleClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassRule()); }
	iv_ruleClass=ruleClass
	{ $current=$iv_ruleClass.current; }
	EOF;

// Rule Class
ruleClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_classname_0_0=RULE_ID
			{
				newLeafNode(lv_classname_0_0, grammarAccess.getClassAccess().getClassnameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getClassRule());
				}
				setWithLastConsumed(
					$current,
					"classname",
					lv_classname_0_0,
					"org.xtext.spring.SpringConfigDslJava.ID");
			}
		)
	)
;

// Entry rule entryRuleAnnotationConfiguration
entryRuleAnnotationConfiguration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnnotationConfigurationRule()); }
	iv_ruleAnnotationConfiguration=ruleAnnotationConfiguration
	{ $current=$iv_ruleAnnotationConfiguration.current; }
	EOF;

// Rule AnnotationConfiguration
ruleAnnotationConfiguration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAnnotationConfigurationAccess().getAnnotationConfigurationAction_0(),
					$current);
			}
		)
		(
			otherlv_1='@Configuration'
			{
				newLeafNode(otherlv_1, grammarAccess.getAnnotationConfigurationAccess().getConfigurationKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAnnotationConfigurationAccess().getAnnotationsImportAnnotationsParserRuleCall_1_1_0());
					}
					lv_annotations_2_0=ruleImportAnnotations
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAnnotationConfigurationRule());
						}
						add(
							$current,
							"annotations",
							lv_annotations_2_0,
							"org.xtext.spring.SpringConfigDslJava.ImportAnnotations");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)
	)
;

// Entry rule entryRuleImportAnnotations
entryRuleImportAnnotations returns [String current=null]:
	{ newCompositeNode(grammarAccess.getImportAnnotationsRule()); }
	iv_ruleImportAnnotations=ruleImportAnnotations
	{ $current=$iv_ruleImportAnnotations.current.getText(); }
	EOF;

// Rule ImportAnnotations
ruleImportAnnotations returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='@Import'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getImportAnnotationsAccess().getImportKeyword_0_0());
			}
			kw='('
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getImportAnnotationsAccess().getLeftParenthesisKeyword_0_1());
			}
			{
				newCompositeNode(grammarAccess.getImportAnnotationsAccess().getImportFormatRulesParserRuleCall_0_2());
			}
			this_ImportFormatRules_2=ruleImportFormatRules
			{
				$current.merge(this_ImportFormatRules_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw=')'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getImportAnnotationsAccess().getRightParenthesisKeyword_0_3());
			}
		)
		    |
		(
			kw='@ImportRessource'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getImportAnnotationsAccess().getImportRessourceKeyword_1_0());
			}
			kw='('
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getImportAnnotationsAccess().getLeftParenthesisKeyword_1_1());
			}
			{
				newCompositeNode(grammarAccess.getImportAnnotationsAccess().getImportFormatRulesParserRuleCall_1_2());
			}
			this_ImportFormatRules_6=ruleImportFormatRules
			{
				$current.merge(this_ImportFormatRules_6);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw=')'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getImportAnnotationsAccess().getRightParenthesisKeyword_1_3());
			}
		)
	)
;

// Entry rule entryRuleImportFormatRules
entryRuleImportFormatRules returns [String current=null]:
	{ newCompositeNode(grammarAccess.getImportFormatRulesRule()); }
	iv_ruleImportFormatRules=ruleImportFormatRules
	{ $current=$iv_ruleImportFormatRules.current.getText(); }
	EOF;

// Rule ImportFormatRules
ruleImportFormatRules returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='{'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getImportFormatRulesAccess().getLeftCurlyBracketKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getImportFormatRulesAccess().getClassFileExtensionsParserRuleCall_0_1());
			}
			this_ClassFileExtensions_1=ruleClassFileExtensions
			{
				$current.merge(this_ClassFileExtensions_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw='}'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getImportFormatRulesAccess().getRightCurlyBracketKeyword_0_2());
			}
		)
		    |
		(
			(
				kw='value='
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getImportFormatRulesAccess().getValueKeyword_1_0_0());
				}
				kw='{'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getImportFormatRulesAccess().getLeftCurlyBracketKeyword_1_0_1());
				}
				{
					newCompositeNode(grammarAccess.getImportFormatRulesAccess().getClassFileExtensionsParserRuleCall_1_0_2());
				}
				this_ClassFileExtensions_5=ruleClassFileExtensions
				{
					$current.merge(this_ClassFileExtensions_5);
				}
				{
					afterParserOrEnumRuleCall();
				}
				kw='}'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getImportFormatRulesAccess().getRightCurlyBracketKeyword_1_0_3());
				}
			)
			    |
			(
				kw='{'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getImportFormatRulesAccess().getLeftCurlyBracketKeyword_1_1_0());
				}
				{
					newCompositeNode(grammarAccess.getImportFormatRulesAccess().getStringListParserRuleCall_1_1_1());
				}
				this_StringList_8=ruleStringList
				{
					$current.merge(this_StringList_8);
				}
				{
					afterParserOrEnumRuleCall();
				}
				kw='}'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getImportFormatRulesAccess().getRightCurlyBracketKeyword_1_1_2());
				}
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getImportFormatRulesAccess().getClassFileExtensionParserRuleCall_2());
		}
		this_ClassFileExtension_10=ruleClassFileExtension
		{
			$current.merge(this_ClassFileExtension_10);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_STRING_11=RULE_STRING
		{
			$current.merge(this_STRING_11);
		}
		{
			newLeafNode(this_STRING_11, grammarAccess.getImportFormatRulesAccess().getSTRINGTerminalRuleCall_3());
		}
	)
;

// Entry rule entryRuleStringListAnnotation
entryRuleStringListAnnotation returns [String current=null]:
	{ newCompositeNode(grammarAccess.getStringListAnnotationRule()); }
	iv_ruleStringListAnnotation=ruleStringListAnnotation
	{ $current=$iv_ruleStringListAnnotation.current.getText(); }
	EOF;

// Rule StringListAnnotation
ruleStringListAnnotation returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='{'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getStringListAnnotationAccess().getLeftCurlyBracketKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getStringListAnnotationAccess().getStringListParserRuleCall_0_1());
			}
			this_StringList_1=ruleStringList
			{
				$current.merge(this_StringList_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw='}'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getStringListAnnotationAccess().getRightCurlyBracketKeyword_0_2());
			}
		)
		    |
		(
			kw='value='
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getStringListAnnotationAccess().getValueKeyword_1_0());
			}
			kw='{'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getStringListAnnotationAccess().getLeftCurlyBracketKeyword_1_1());
			}
			{
				newCompositeNode(grammarAccess.getStringListAnnotationAccess().getStringListParserRuleCall_1_2());
			}
			this_StringList_5=ruleStringList
			{
				$current.merge(this_StringList_5);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw='}'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getStringListAnnotationAccess().getRightCurlyBracketKeyword_1_3());
			}
		)
	)
;

// Entry rule entryRuleStringList
entryRuleStringList returns [String current=null]:
	{ newCompositeNode(grammarAccess.getStringListRule()); }
	iv_ruleStringList=ruleStringList
	{ $current=$iv_ruleStringList.current.getText(); }
	EOF;

// Rule StringList
ruleStringList returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getStringListAccess().getSTRINGTerminalRuleCall_0());
		}
		(
			kw=','
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getStringListAccess().getCommaKeyword_1_0());
			}
			this_STRING_2=RULE_STRING
			{
				$current.merge(this_STRING_2);
			}
			{
				newLeafNode(this_STRING_2, grammarAccess.getStringListAccess().getSTRINGTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleClassFileExtensions
entryRuleClassFileExtensions returns [String current=null]:
	{ newCompositeNode(grammarAccess.getClassFileExtensionsRule()); }
	iv_ruleClassFileExtensions=ruleClassFileExtensions
	{ $current=$iv_ruleClassFileExtensions.current.getText(); }
	EOF;

// Rule ClassFileExtensions
ruleClassFileExtensions returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getClassFileExtensionsAccess().getClassFileExtensionParserRuleCall_0());
		}
		this_ClassFileExtension_0=ruleClassFileExtension
		{
			$current.merge(this_ClassFileExtension_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw=','
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getClassFileExtensionsAccess().getCommaKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getClassFileExtensionsAccess().getClassFileExtensionParserRuleCall_1_1());
			}
			this_ClassFileExtension_2=ruleClassFileExtension
			{
				$current.merge(this_ClassFileExtension_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)*
	)
;

// Entry rule entryRuleClassFileExtension
entryRuleClassFileExtension returns [String current=null]:
	{ newCompositeNode(grammarAccess.getClassFileExtensionRule()); }
	iv_ruleClassFileExtension=ruleClassFileExtension
	{ $current=$iv_ruleClassFileExtension.current.getText(); }
	EOF;

// Rule ClassFileExtension
ruleClassFileExtension returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getClassFileExtensionAccess().getIDTerminalRuleCall_0());
		}
		kw='.class'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getClassFileExtensionAccess().getClassKeyword_1());
		}
	)
;

// Entry rule entryRuleEOL
entryRuleEOL returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEOLRule()); }
	iv_ruleEOL=ruleEOL
	{ $current=$iv_ruleEOL.current.getText(); }
	EOF;

// Rule EOL
ruleEOL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw=';'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getEOLAccess().getSemicolonKeyword());
	}
;

// Rule Visibility
ruleVisibility returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='public'
			{
				$current = grammarAccess.getVisibilityAccess().getPUBLICEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getVisibilityAccess().getPUBLICEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='private'
			{
				$current = grammarAccess.getVisibilityAccess().getPRIVATEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getVisibilityAccess().getPRIVATEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='protected'
			{
				$current = grammarAccess.getVisibilityAccess().getPROTECTEDEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getVisibilityAccess().getPROTECTEDEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
